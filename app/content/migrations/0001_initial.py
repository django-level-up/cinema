# Generated by Django 5.0.1 on 2024-01-21 22:58

import django.core.validators
import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Movie',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('update', models.DateField(auto_now=True)),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('image', models.URLField(blank=True, null=True)),
                ('bg_image', models.URLField(blank=True, null=True)),
                ('release_date', models.DateField(blank=True, null=True)),
                ('imdb_rating', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0.0)])),
                ('tmdb_rating', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0.0)])),
                ('kinopoisk_rating', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0.0)])),
                ('duration', models.CharField(blank=True, max_length=255, null=True)),
                ('keywords', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name': '1. Movie',
                'verbose_name_plural': '1. Movies',
            },
        ),
        migrations.CreateModel(
            name='Season',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('update', models.DateField(auto_now=True)),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('duration', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'verbose_name': '5. Season',
                'verbose_name_plural': '5. Seasons',
                'ordering': ['-created'],
            },
        ),
        migrations.CreateModel(
            name='Show',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('update', models.DateField(auto_now=True)),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('image', models.URLField(blank=True, null=True)),
                ('bg_image', models.URLField(blank=True, null=True)),
                ('release_date', models.DateField(blank=True, null=True)),
                ('imdb_rating', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0.0)])),
                ('kinopoisk_rating', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0.0)])),
                ('tmdb_rating', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0.0)])),
                ('duration', models.CharField(blank=True, max_length=255, null=True)),
                ('keywords', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name': '3. Show',
                'verbose_name_plural': '3. Shows',
            },
        ),
        migrations.CreateModel(
            name='Source',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('update', models.DateField(auto_now=True)),
                ('title', models.CharField(max_length=255)),
                ('slug', models.SlugField(blank=True, null=True, unique=True)),
            ],
            options={
                'verbose_name': '0. Source',
                'verbose_name_plural': '0. Sources',
            },
        ),
        migrations.CreateModel(
            name='Episode',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('update', models.DateField(auto_now=True)),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('duration', models.CharField(blank=True, max_length=255, null=True)),
                ('season', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='episodes', to='content.season')),
            ],
            options={
                'verbose_name': '7. Episode',
                'verbose_name_plural': '7. Episode',
                'ordering': ['-created'],
            },
        ),
        migrations.AddField(
            model_name='season',
            name='show',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='seasons', to='content.show'),
        ),
        migrations.CreateModel(
            name='ShowSource',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('update', models.DateField(auto_now=True)),
                ('kinopoisk_link', models.URLField(blank=True, null=True)),
                ('imdb_link', models.URLField(blank=True, null=True)),
                ('download_link', models.URLField(blank=True, null=True)),
                ('tmdb_link', models.URLField(blank=True, null=True)),
                ('valid_source', models.BooleanField(default=False)),
                ('watch_link', models.URLField(blank=True, null=True)),
                ('show', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='content.show')),
                ('source', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='content.source')),
            ],
            options={
                'verbose_name': '4. Show Source',
                'verbose_name_plural': '4. Shows Sources',
                'unique_together': {('source', 'show')},
            },
        ),
        migrations.AddField(
            model_name='show',
            name='show_sources',
            field=models.ManyToManyField(related_name='shows', through='content.ShowSource', to='content.source'),
        ),
        migrations.CreateModel(
            name='SeasonSource',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('update', models.DateField(auto_now=True)),
                ('download_link', models.URLField(blank=True, null=True)),
                ('kinopoisk_link', models.URLField(blank=True, null=True)),
                ('imdb_link', models.URLField(blank=True, null=True)),
                ('valid_source', models.BooleanField(default=True)),
                ('season', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='content.season')),
                ('show', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='content.show')),
                ('source', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='content.source')),
            ],
            options={
                'verbose_name': '6. Season Source',
                'verbose_name_plural': '6. Season Sources',
                'unique_together': {('source', 'show', 'season')},
            },
        ),
        migrations.AddField(
            model_name='season',
            name='season_sources',
            field=models.ManyToManyField(related_name='season', through='content.SeasonSource', to='content.source'),
        ),
        migrations.CreateModel(
            name='MovieSource',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('update', models.DateField(auto_now=True)),
                ('download_link', models.URLField(blank=True, null=True)),
                ('kinopoisk_link', models.URLField(blank=True, null=True)),
                ('imdb_link', models.URLField(blank=True, null=True)),
                ('tmdb_link', models.URLField(blank=True, null=True)),
                ('watch_link', models.URLField(blank=True, null=True)),
                ('valid_source', models.BooleanField(default=False)),
                ('movie', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='content.movie')),
                ('source', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='content.source')),
            ],
            options={
                'verbose_name': '2. Movie Source',
                'verbose_name_plural': '2. Movies Sources',
                'unique_together': {('source', 'movie')},
            },
        ),
        migrations.AddField(
            model_name='movie',
            name='movie_sources',
            field=models.ManyToManyField(related_name='movies', through='content.MovieSource', to='content.source'),
        ),
        migrations.CreateModel(
            name='EpisodeSource',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('update', models.DateField(auto_now=True)),
                ('download_link', models.URLField(blank=True, null=True)),
                ('kinopoisk_link', models.URLField(blank=True, null=True)),
                ('imdb_link', models.URLField(blank=True, null=True)),
                ('valid_source', models.BooleanField(default=True)),
                ('episode', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='content.episode')),
                ('season', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='content.season')),
                ('show', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='content.show')),
                ('source', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='content.source')),
            ],
            options={
                'verbose_name': '8. Episode Source',
                'verbose_name_plural': '8. Episode Sources',
                'unique_together': {('source', 'show', 'season', 'episode')},
            },
        ),
        migrations.AddField(
            model_name='episode',
            name='episode_sources',
            field=models.ManyToManyField(related_name='episode', through='content.EpisodeSource', to='content.source'),
        ),
    ]
