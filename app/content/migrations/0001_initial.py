# Generated by Django 5.0.1 on 2024-01-20 14:35

import django.core.validators
import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Episode',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('update', models.DateField(auto_now=True)),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Movie',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('update', models.DateField(auto_now=True)),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('image', models.URLField(blank=True, null=True)),
                ('bg_image', models.URLField(blank=True, null=True)),
                ('release_date', models.DateField(blank=True, null=True)),
                ('imdb_rating', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0.0)])),
                ('kinopoisk_rating', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0.0)])),
                ('duration', models.CharField(blank=True, max_length=255, null=True)),
                ('keywords', models.TextField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Season',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('update', models.DateField(auto_now=True)),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('duration', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'ordering': ['-created'],
            },
        ),
        migrations.CreateModel(
            name='Show',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('update', models.DateField(auto_now=True)),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('image', models.URLField(blank=True, null=True)),
                ('bg_image', models.URLField(blank=True, null=True)),
                ('runtime', models.IntegerField(blank=True, null=True)),
                ('weight', models.IntegerField(blank=True, null=True)),
                ('release_date', models.DateField(blank=True, null=True)),
                ('popularity', models.IntegerField(blank=True, null=True)),
                ('is_free', models.BooleanField(default=False)),
                ('is_trending', models.BooleanField(default=False)),
                ('trending_weight', models.IntegerField(blank=True, null=True)),
                ('imdb_rating', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0.0)])),
                ('kinopoisk_rating', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0.0)])),
                ('duration', models.CharField(blank=True, max_length=255, null=True)),
                ('keywords', models.TextField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Source',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('update', models.DateField(auto_now=True)),
                ('title', models.CharField(max_length=255)),
            ],
            options={
                'verbose_name': 'Source',
            },
        ),
        migrations.CreateModel(
            name='MovieSource',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('update', models.DateField(auto_now=True)),
                ('download_link', models.URLField(blank=True, null=True)),
                ('playlist_link', models.URLField(blank=True, null=True)),
                ('movie', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='content.movie')),
                ('source', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='content.source')),
            ],
            options={
                'verbose_name': 'Source movie',
                'verbose_name_plural': 'Sources Movies',
                'unique_together': {('source', 'movie')},
            },
        ),
        migrations.AddField(
            model_name='movie',
            name='sources',
            field=models.ManyToManyField(related_name='movie_sources', to='content.moviesource'),
        ),
        migrations.CreateModel(
            name='SeasonSource',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('update', models.DateField(auto_now=True)),
                ('download_link', models.URLField(blank=True, null=True)),
                ('kinopoisk_link', models.URLField(blank=True, null=True)),
                ('imdb_link', models.URLField(blank=True, null=True)),
                ('season', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='content.season')),
                ('source', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='content.source')),
            ],
            options={
                'verbose_name': 'Season Source',
                'verbose_name_plural': 'Season Sources',
            },
        ),
        migrations.AddField(
            model_name='season',
            name='sources',
            field=models.ManyToManyField(related_name='season_sources', to='content.seasonsource'),
        ),
        migrations.AddField(
            model_name='season',
            name='show',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='content.show'),
        ),
        migrations.CreateModel(
            name='ShowSource',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('update', models.DateField(auto_now=True)),
                ('download_link', models.URLField(blank=True, null=True)),
                ('kinopoisk_link', models.URLField(blank=True, null=True)),
                ('imdb_link', models.URLField(blank=True, null=True)),
                ('show', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='content.show')),
                ('source', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='content.source')),
            ],
            options={
                'verbose_name': 'Show Source',
                'verbose_name_plural': 'Shows Sources',
            },
        ),
        migrations.AddField(
            model_name='show',
            name='sources',
            field=models.ManyToManyField(related_name='show_sources', to='content.showsource'),
        ),
    ]
